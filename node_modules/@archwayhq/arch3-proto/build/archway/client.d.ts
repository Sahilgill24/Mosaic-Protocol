import { GeneratedType, Registry, OfflineSigner } from "@cosmjs/proto-signing";
import { AminoTypes, SigningStargateClient } from "@cosmjs/stargate";
import { HttpEndpoint } from "@cosmjs/tendermint-rpc";
export declare const archwayAminoConverters: {
    "/archway.rewards.v1.MsgSetContractMetadata": {
        aminoType: string;
        toAmino: (message: import("./rewards/v1/tx").MsgSetContractMetadata) => import("./rewards/v1/tx").MsgSetContractMetadataAmino;
        fromAmino: (object: import("./rewards/v1/tx").MsgSetContractMetadataAmino) => import("./rewards/v1/tx").MsgSetContractMetadata;
    };
    "/archway.rewards.v1.MsgWithdrawRewards": {
        aminoType: string;
        toAmino: (message: import("./rewards/v1/tx").MsgWithdrawRewards) => import("./rewards/v1/tx").MsgWithdrawRewardsAmino;
        fromAmino: (object: import("./rewards/v1/tx").MsgWithdrawRewardsAmino) => import("./rewards/v1/tx").MsgWithdrawRewards;
    };
    "/archway.rewards.v1.MsgSetFlatFee": {
        aminoType: string;
        toAmino: (message: import("./rewards/v1/tx").MsgSetFlatFee) => import("./rewards/v1/tx").MsgSetFlatFeeAmino;
        fromAmino: (object: import("./rewards/v1/tx").MsgSetFlatFeeAmino) => import("./rewards/v1/tx").MsgSetFlatFee;
    };
    "/archway.rewards.v1.MsgUpdateParams": {
        aminoType: string;
        toAmino: (message: import("./rewards/v1/tx").MsgUpdateParams) => import("./rewards/v1/tx").MsgUpdateParamsAmino;
        fromAmino: (object: import("./rewards/v1/tx").MsgUpdateParamsAmino) => import("./rewards/v1/tx").MsgUpdateParams;
    };
};
export declare const archwayProtoRegistry: ReadonlyArray<[string, GeneratedType]>;
export declare const getSigningArchwayClientOptions: ({ defaultTypes }?: {
    defaultTypes?: ReadonlyArray<[string, GeneratedType]>;
}) => {
    registry: Registry;
    aminoTypes: AminoTypes;
};
export declare const getSigningArchwayClient: ({ rpcEndpoint, signer, defaultTypes }: {
    rpcEndpoint: string | HttpEndpoint;
    signer: OfflineSigner;
    defaultTypes?: ReadonlyArray<[string, GeneratedType]>;
}) => Promise<SigningStargateClient>;
